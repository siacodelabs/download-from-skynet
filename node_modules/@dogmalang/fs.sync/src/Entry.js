"use strict";

var _core = require("@dogmalang/core");

const fsx = _core.dogma.use(require("fs-extra"));

const $Entry = class Entry {
  constructor(path) {
    /* istanbul ignore next */
    _core.dogma.paramExpected("path", path, _core.text);

    Object.defineProperty(this, "path", {
      value: path,
      enum: true,
      writable: false
    });
    {}
  }

};
const Entry = new Proxy($Entry, {
  apply(receiver, self, args) {
    /* istanbul ignore next */
    throw "'Entry' is abstract.";
  }

});
module.exports = exports = Entry;

Entry.prototype.remove = Entry.prototype.rm = function () {
  {
    fsx.removeSync(this.path);
  }
};
/* istanbul ignore next */


Entry.prototype.exists = function () {
  (0, _core.abstract)();
};